<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.broadcastgroupware.mapper.BoardMapper">

	<select id="boardCount" resultType="int">
		SELECT COUNT(*)
		FROM board b
		INNER JOIN post p
			ON b.board_id = p.board_id
		INNER JOIN user u
			ON p.user_id = u.user_id
		<where>
			<if test="searchWord != null and searchWord != ''">
				<choose>
					<when test="searchType == 'title'">
						AND p.post_title LIKE CONCAT('%', #{searchWord}, '%')
					</when>
					<when test="searchType == 'userName'">
						AND u.full_name LIKE CONCAT('%', #{searchWord}, '%')
					</when>
					<when test="searchType == 'category'">
						AND b.board_title LIKE CONCAT('%', #{searchWord}, '%')
					</when>
				</choose>
			</if>
		</where>
	</select>

	<!-- 게시판 리스트 -->
	<select id="boardList" parameterType="com.example.broadcastgroupware.dto.BoardPageDto" resultType="com.example.broadcastgroupware.dto.AdminBoardListDto">
		SELECT b.board_id AS boardId, b.board_title AS boardTitle, b.board_status AS boardStatus, p.post_id AS postId,
				p.post_title AS title, p.post_status AS postStatus, p.top_fixed AS fixed, u.full_name AS userName, p.create_date AS createDate
		FROM board b
		INNER JOIN post p
		ON b.board_id = p.board_id
		INNER JOIN user u
		ON p.user_id = u.user_id
		<if test="searchWord  != null and searchWord != ''">
			<choose>
				<when test="searchType == 'title' and searchWord != null and searchWord != ''">
					AND p.post_title LIKE CONCAT('%', #{searchWord}, '%')
				</when>
				<when test="searchType == 'userName' and searchWord != null and searchWord != ''">
					AND u.full_name LIKE CONCAT('%', #{searchWord}, '%')
				</when>
				<when test="searchType == 'category'">
					AND b.board_title LIKE CONCAT('%', #{searchWord}, '%')
				</when>
			</choose>
		</if>
		ORDER BY p.post_id DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>

    <!-- 게시판 메뉴 리스트 -->
    <select id="getBoardMenuList" resultType="com.example.broadcastgroupware.dto.BoardMenuDto">
        SELECT board_id AS boardId, board_title AS boardTitle, board_status AS boardStatus
        FROM board
        ORDER BY board_id ASC
    </select>
    
	<!-- 게시판 글 수 (검색 포함) -->
	<select id="getBoardPostCount" parameterType="com.example.broadcastgroupware.dto.BoardPageDto" resultType="int">
	    SELECT COUNT(*)
	    FROM post p
	    LEFT JOIN user u ON p.user_id = u.user_id
	    LEFT JOIN board b ON p.board_id = b.board_id
	    WHERE b.board_id = #{boardId}
		<if test="pageDto.searchType != null and pageDto.searchWord != null and pageDto.searchWord != ''">
		    <trim prefix="AND (" suffix=")" prefixOverrides="OR">
		        <if test="pageDto.searchType.contains('title')">
		            p.post_title LIKE CONCAT('%', #{pageDto.searchWord}, '%')
		        </if>
		        <if test="pageDto.searchType.contains('userName')">
		            <if test="pageDto.searchType.contains('title')"> OR </if>
		            u.full_name LIKE CONCAT('%', #{pageDto.searchWord}, '%')
		        </if>
		        <if test="pageDto.searchType.contains('category')">
		            <if test="pageDto.searchType.contains('title') or pageDto.searchType.contains('userName')"> OR </if>
		            b.board_title LIKE CONCAT('%', #{pageDto.searchWord}, '%')
		        </if>
		    </trim>
		</if>
	</select>
	
	<!-- 관리자- 게시판생성 -->
	<insert id="newBoard" parameterType="com.example.broadcastgroupware.domain.Board">
		INSERT INTO board(board_title)
		values(#{boardTitle})
	</insert>
	
	<!-- 관리자 - 상단고정  -->
	<update id="modifyFixed">
	    UPDATE post
	    SET top_fixed = #{topFixed}
	    WHERE post_id = #{postId}
	</update>
	<!-- 게시글 저장 -->
	<update id="modifyPostStatus">
	    UPDATE post
	    SET post_status = #{postStatus}
	    WHERE post_id = #{postId}
	</update>
	
	
	<!-- 게시판 글 리스트 (페이징 + 검색) -->
	<select id="getBoardPosts" parameterType="com.example.broadcastgroupware.dto.BoardPageDto" resultType="com.example.broadcastgroupware.dto.BoardPostDto">
	    SELECT p.post_id AS postId,
	           p.post_title AS title,
	           u.full_name AS userName,
	           p.create_date AS createDate
	    FROM post p
	    LEFT JOIN user u ON p.user_id = u.user_id
	    LEFT JOIN board b ON p.board_id = b.board_id
	    WHERE b.board_id = #{boardId}
		<if test="pageDto.searchType != null and pageDto.searchWord != null and pageDto.searchWord != ''">
		    <trim prefix="AND (" suffix=")" prefixOverrides="OR">
		        <if test="pageDto.searchType.contains('title')">
		            p.post_title LIKE CONCAT('%', #{pageDto.searchWord}, '%')
		        </if>
		        <if test="pageDto.searchType.contains('userName')">
		            <if test="pageDto.searchType.contains('title')"> OR </if>
		            u.full_name LIKE CONCAT('%', #{pageDto.searchWord}, '%')
		        </if>
		        <if test="pageDto.searchType.contains('category')">
		            <if test="pageDto.searchType.contains('title') or pageDto.searchType.contains('userName')"> OR </if>
		            b.board_title LIKE CONCAT('%', #{pageDto.searchWord}, '%')
		        </if>
		    </trim>
		</if>
		ORDER BY
	    CASE WHEN p.top_fixed = 'Y' THEN 0 ELSE 1 END,
	    p.create_date DESC
	    LIMIT #{pageDto.beginRow}, #{pageDto.rowPerPage}
	</select>

    <!-- 게시글 저장 -->
	<insert id="savePost" useGeneratedKeys="true" keyProperty="postDto.postId">
	    INSERT INTO post (board_id, post_title, post_content, post_password, user_id, create_date)
	    VALUES (#{postDto.boardId}, #{postDto.postTitle}, #{postDto.postContent}, #{PostPassword}, #{userId}, NOW())
	</insert>

    <!-- 복수 파일 저장 -->
	<insert id="saveFiles" parameterType="list">
	    INSERT INTO file (file_type, file_target_id, file_name, file_save_name, file_ext, file_path, create_date)
	    VALUES
	    <foreach collection="list" item="file" separator=",">
	        (#{file.fileType}, #{file.fileTargetId}, #{file.fileName}, #{file.fileSaveName}, #{file.fileExt}, #{file.filePath}, NOW())
	    </foreach>
	</insert>

	<!-- 상세 게시글 -->
    <select id="postDetail" resultType="com.example.broadcastgroupware.dto.PostDetailDto">
		SELECT p.post_id AS postId, p.user_id AS userId, p.post_title AS postTitle, p.post_content AS postContent, p.create_date AS createDate,
		u.full_name AS userName, u.user_rank AS userRank
		FROM post p
		INNER JOIN user u
		ON p.user_id = u.user_id
		WHERE p.post_id = #{postId}
    </select>
    
    <!-- 댓글리스트 -->
    <select id="selectComment" resultType="com.example.broadcastgroupware.dto.CommentDto">
		SELECT 
			c.comment_id AS commentId,
			c.post_id AS postId,
			c.user_id AS userId,
			c.comment_status AS commentStatus,
			c.comment_content AS commentContent,
			c.comment_status AS commentStatus,
			c.comment_parent AS commentParent,
			c.create_date AS createDate,
			u.full_name AS userName,
			u.user_rank AS userRank
		FROM comment c
		JOIN user u ON c.user_id = u.user_id
		WHERE c.post_id = #{postId}
		AND c.comment_parent IS NULL
		ORDER BY c.create_date ASC
    </select>
    <!-- 대댓글리스트 -->
   	<select id="selectReplies" resultType="com.example.broadcastgroupware.dto.CommentDto">
		SELECT 
			c.comment_id AS commentId,
			c.post_id AS postId,
			c.user_id AS userId,
			c.comment_status AS commentStatus,
			c.comment_content AS commentContent,
			c.comment_status AS commentStatus,
			c.comment_parent AS commentParent,
			c.create_date AS createDate,
			u.full_name AS userName,
			u.user_rank AS userRank
		FROM comment c
		JOIN user u ON c.user_id = u.user_id
		WHERE c.post_id = #{postId}
		AND c.comment_parent IS NOT NULL
		ORDER BY c.create_date ASC
   	</select> 
   
    
    <!-- 파일목록 출력(상세페이지) -->
    <select id="fileList" resultType="com.example.broadcastgroupware.domain.File" parameterType="int">
    	SELECT file_id AS fileId, file_target_id AS fileTargetId, file_name AS fileName, file_save_name AS fileSaveName, file_path AS filePath
		FROM file
		WHERE file_target_id = #{postId}
    </select>
    
    <!-- 파일 아이디찾기(다운로드) -->
    <select id="fileById" parameterType="int" resultType="com.example.broadcastgroupware.domain.File">
    	SELECT file_name AS fileName, file_save_name AS fileSaveName, file_path AS filePath
		FROM file
		WHERE file_id = #{fileId}
    </select>
    
    <!-- 첫댓글 -->
    <insert id="commentInsert" parameterType="com.example.broadcastgroupware.domain.Comment">
    	INSERT INTO comment (post_id, comment_content, comment_status, user_id)
    	VALUES(#{postId}, #{commentContent}, 'Y', #{userId})
    </insert>
    
    <!-- 대댓글 -->
    <insert id="cecondCommentInsert" parameterType="com.example.broadcastgroupware.domain.Comment">
	    INSERT INTO comment (post_id, comment_content, comment_parent, comment_status, user_id)
    	VALUES(#{postId}, #{commentContent}, #{commentParent}, 'Y', #{userId})
    </insert>
    
    <!-- 댓글, 대댓글 수정 -->
    <update id="modifyComment" parameterType="com.example.broadcastgroupware.domain.Comment">
    	UPDATE comment SET comment_content = #{commentContent}
    	WHERE comment_id = #{commentId}
    </update>
    
    <!-- 댓글, 대댓글 삭제(비활성화) -->
    <update id="deleteComment" parameterType="int">
    	UPDATE comment SET comment_status = 'N'
    	WHERE comment_id = #{commentId}
    </update>

</mapper>