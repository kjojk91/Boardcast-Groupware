<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.broadcastgroupware.mapper.ApprovalMapper">
	
    <!-- 공통/일반 문서 INSERT -->
    <!-- 
		useGeneratedKeys="true": DB에서 AUTO_INCREMENT로 생성된 PK 값을 가져오도록 설정
		keyProperty="approvalDocumentId": 생성된 PK를 ApprovalDocument 객체의 approvalDocumentId 필드에 자동 세팅
		=> insert 실행 후 doc.getApprovalDocumentId() 호출 시 DB에서 생성된 PK 값 확인 가능
	-->
    <insert id="insertApprovalDocument"
            parameterType="com.example.broadcastgroupware.domain.ApprovalDocument"
            useGeneratedKeys="true" keyProperty="approvalDocumentId">
        INSERT INTO approval_document (
            user_id,approval_document_title, approval_document_content,
            approval_document_status, create_date, update_date
        ) VALUES (
            #{userId}, #{approvalDocumentTitle}, #{approvalDocumentContent},            
            #{approvalDocumentStatus}, NOW(), NOW()
        )
    </insert>  
	
	<!-- 팀 ID 들로 소속 사용자 ID 조회 -->
	<select id="selectUserIdsByTeamIds" resultType="int">
	    SELECT DISTINCT u.user_id
	    FROM `user` u
	    JOIN (
	        SELECT dh.user_id, dh.team_id
	        FROM deployment_history dh
	        JOIN (
	            SELECT user_id, MAX(create_date) AS latest_date
	            FROM deployment_history
	            GROUP BY user_id
	        ) latest
	            ON latest.user_id = dh.user_id
	            AND latest.latest_date = dh.create_date
	    ) dh ON dh.user_id = u.user_id
	    WHERE dh.team_id IN
	    <foreach collection="teamIds" item="id" open="(" separator="," close=")">
	        #{id}
	    </foreach>
	    AND u.user_resign_date IS NULL  <!-- 퇴사자 제외 -->
	</select>


    <!-- 휴가 문서 폼 INSERT -->
    <insert id="insertVacationForm"
            parameterType="com.example.broadcastgroupware.domain.VacationForm"
            useGeneratedKeys="true" keyProperty="vacationFormId">
        INSERT INTO vacation_form (
            approval_document_id, vacation_form_type, vacation_form_half_type,
            vacation_form_start_date, vacation_form_end_date, create_date, update_date    
        ) VALUES (
            #{approvalDocumentId}, #{vacationFormType}, #{vacationFormHalfType},
            #{vacationFormStartDate}, #{vacationFormEndDate}, NOW(), NOW()
        )
    </insert>

    <!-- 방송 문서 폼 INSERT -->
    <insert id="insertBroadcastForm"
            parameterType="com.example.broadcastgroupware.domain.BroadcastForm"
            useGeneratedKeys="true" keyProperty="broadcastFormId">
        INSERT INTO broadcast_form (
            approval_document_id, broadcast_form_name, broadcast_form_capacity,
            broadcast_form_start_date, broadcast_form_end_date,
            broadcast_form_start_time, broadcast_form_end_time,
            create_date, update_date
        ) VALUES (
            #{approvalDocumentId}, #{broadcastFormName}, #{broadcastFormCapacity},
            #{broadcastFormStartDate}, #{broadcastFormEndDate},
            #{broadcastFormStartTime}, #{broadcastFormEndTime},
            NOW(), NOW()
        )
    </insert>
    
    <!-- 방송 요일 INSERT -->
    <insert id="insertBroadcastWeekday"
	        parameterType="com.example.broadcastgroupware.domain.BroadcastWeekday"
	        useGeneratedKeys="true" keyProperty="broadcastWeekdayId">
	    INSERT INTO broadcast_weekday (
	        broadcast_form_id,
	        broadcast_sunday, broadcast_monday, broadcast_tuesday,
	        broadcast_wednesday, broadcast_thursday, broadcast_friday, broadcast_saturday,
	        create_date
	    )
	    VALUES (
	        #{broadcastFormId},
	        #{broadcastSunday}, #{broadcastMonday}, #{broadcastTuesday},
	        #{broadcastWednesday}, #{broadcastThursday}, #{broadcastFriday}, #{broadcastSaturday},
	        NOW()
	    )
	</insert>
	
	
	<!-- ======== 결재선/참조선 ======== -->
	
	<!-- 결재선 INSERT -->
	<insert id="insertApprovalLines">
	    INSERT INTO approval_line (
	        approval_document_id, user_id, approval_line_sequence,
	        approval_line_status, approval_line_comment, create_date
	    )
	    VALUES
	    <foreach collection="lines" item="l" separator=",">
	        (#{l.approvalDocumentId}, #{l.userId}, #{l.approvalLineSequence},
	         #{l.approvalLineStatus}, #{l.approvalLineComment}, NOW())
	    </foreach>
	</insert>
	
	<!-- 참조선 INSERT -->
	<insert id="insertReferenceLines">
	    INSERT INTO reference_line (
	        approval_document_id, user_id, create_date
	    )
	    VALUES
	    <foreach collection="refs" item="r" separator=",">
	        (#{r.approvalDocumentId}, #{r.userId}, NOW())
	    </foreach>
	</insert>
	
	
	<!-- ======== 결재 (승인/반려) ======== -->
	
	<!-- 결재선 상태/코멘트 업데이트 (대기 -> 승인/반려) -->
	<update id="updateMyApprovalLineDecision" parameterType="map">
	    UPDATE approval_line
	    SET approval_line_status = #{status},
	        approval_line_comment = #{comment}
	    WHERE approval_document_id = #{approvalDocumentId}
	      	AND user_id = #{userId}
	    	AND approval_line_status = '대기'
	</update>
	
	<!-- 다음 결재자 1명 '대기'로 승격 (NULL -> 대기) -->
	<update id="activateNextApprover" parameterType="map">
	    UPDATE approval_line
	    SET approval_line_status = '대기'
	    WHERE approval_document_id = #{approvalDocumentId}
	    	AND approval_line_sequence = #{nextSequence}
	      	AND approval_line_status IS NULL
	</update>
	
	<!-- 문서 상태 UPDATE -->
	<update id="updateDocumentStatus">
	    UPDATE approval_document
	    SET approval_document_status = #{status},
	        update_date = NOW()
	    WHERE approval_document_id = #{approvalDocumentId}
	</update>
	
	
	<!-- ======== 수정 ======== -->

	<!-- 공통/일반 문서 UPDATE -->
	<update id="updateApprovalDocument" parameterType="map">
	    UPDATE approval_document
	    SET approval_document_title = #{title},
	        approval_document_content = #{content},
	        update_date = NOW()
	    WHERE approval_document_id = #{approvalDocumentId}
	</update>
	
	<!-- 휴가 폼 UPDATE -->
    <update id="updateVacationForm" parameterType="map">
        UPDATE vacation_form
        SET
            vacation_form_type = #{vacationForm.vacationFormType},
            vacation_form_half_type = #{vacationForm.vacationFormHalfType},
            vacation_form_start_date = #{vacationForm.vacationFormStartDate},
            vacation_form_end_date = #{vacationForm.vacationFormEndDate}
        WHERE approval_document_id = #{approvalDocumentId}
    </update>
	
    <!-- 방송 폼 UPDATE -->
    <update id="updateBroadcastForm" parameterType="map">
        UPDATE broadcast_form
        SET
            broadcast_form_name = #{broadcastForm.broadcastFormName},
            broadcast_form_capacity = #{broadcastForm.broadcastFormCapacity},
            broadcast_form_start_date = #{broadcastForm.broadcastFormStartDate},
            broadcast_form_end_date = #{broadcastForm.broadcastFormEndDate},
            broadcast_form_start_time = #{broadcastForm.broadcastFormStartTime},
            broadcast_form_end_time = #{broadcastForm.broadcastFormEndTime}
        WHERE approval_document_id = #{approvalDocumentId}
    </update>
    
    <!-- 방송 요일 UPDATE -->
    <update id="updateBroadcastWeekday" parameterType="map">
        UPDATE broadcast_weekday
        SET
            broadcast_sunday = #{weekday.broadcastSunday},
            broadcast_monday = #{weekday.broadcastMonday},
            broadcast_tuesday = #{weekday.broadcastTuesday},
            broadcast_wednesday = #{weekday.broadcastWednesday},
            broadcast_thursday = #{weekday.broadcastThursday},
            broadcast_friday = #{weekday.broadcastFriday},
            broadcast_saturday = #{weekday.broadcastSaturday}
        WHERE broadcast_form_id = #{broadcastFormId}
    </update>
    
    <!-- 방송 폼 id 조회 (요일 테이블 갱신용) -->
    <select id="selectBroadcastFormIdByDocumentId" resultType="int">
        SELECT broadcast_form_id
        FROM broadcast_form
        WHERE approval_document_id = #{approvalDocumentId}
        LIMIT 1
    </select>
    
    
    <!-- ======== 삭제 ======== -->
	
	<!-- 휴가 폼 DELETE -->
	<delete id="deleteVacationFormByDocumentId" parameterType="int">
		DELETE FROM vacation_form
		WHERE approval_document_id = #{approvalDocumentId}
	</delete>
	
	<!-- 방송 폼 DELETE -->
	<delete id="deleteBroadcastFormByDocumentId" parameterType="int">
		DELETE FROM broadcast_form
		WHERE approval_document_id = #{approvalDocumentId}
	</delete>
	
	<!-- 방송 요일 DELETE -->
	<delete id="deleteBroadcastWeekdayByDocumentId" parameterType="int">
		DELETE bw
		FROM broadcast_weekday bw
		JOIN broadcast_form bf 
			ON bf.broadcast_form_id = bw.broadcast_form_id
		WHERE bf.approval_document_id = #{approvalDocumentId}
	</delete>
	
	<!-- 공통/일반 문서 DELETE -->
	<delete id="deleteDocumentById" parameterType="int">
		DELETE FROM approval_document
		WHERE approval_document_id = #{approvalDocumentId}
	</delete>
	
	<!-- 결재선 전체 삭제 -->
	<delete id="deleteApprovalLinesByDocumentId" parameterType="int">
	    DELETE FROM approval_line
	    WHERE approval_document_id = #{approvalDocumentId}
	</delete>
	
	<!-- 참조선 전체 삭제 -->
	<delete id="deleteReferenceLinesByDocumentId" parameterType="int">
	    DELETE FROM reference_line
	    WHERE approval_document_id = #{approvalDocumentId}
	</delete>   


 	<!-- ======== 그 외 ======== -->

	<!-- 문서 홈 요약: 미결/진행/완료(누적) -->
	<select id="selectHomeDocCounts" parameterType="int" resultType="map">
	  SELECT
	    <!-- 미결함: 내가 결재해야 하는 문서 (현재 대기) -->
	    (
	      SELECT COUNT(*)
	      FROM approval_line al
	      JOIN approval_document ad ON ad.approval_document_id = al.approval_document_id
	      WHERE al.user_id = #{userId}
	        AND al.approval_line_status = '대기'
	    ) AS pending,
	
	    <!-- 진행함: 내가 상신했고 진행 중인 문서-->
	    (
	      SELECT COUNT(*)
	      FROM approval_document ad
	      WHERE ad.user_id = #{userId}
	        AND ad.approval_document_status = '진행 중'
	    ) AS progress,
	
	    <!-- 완료함: 내가 상신해서 끝난 문서(완료/반려/종료 등) -->
	    (
	      SELECT COUNT(*)
	      FROM approval_document ad
	      WHERE ad.user_id = #{userId}
	        AND ad.approval_document_status = '승인'
	    ) AS done
	</select>
	
</mapper>