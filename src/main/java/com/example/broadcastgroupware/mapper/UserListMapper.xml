<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.broadcastgroupware.mapper.UserListMapper">
	
	<!-- 조직도 트리용 select
		 - user 를 기준으로 team, department 를 LEFT JOIN
		 - 부서/팀/사용자 정보가 한 줄로 나오도록 구성
	-->
	
	<select id="selectUsersRow" resultType="com.example.broadcastgroupware.dto.UserRowDto">
		SELECT
			d.department_id 	AS departmentId,
			d.department_name 	AS departmentName,
			t.team_id 			AS teamId,
			t.team_name 		AS teamName,
			u.user_id 			AS userId,
			u.full_name			AS fullName,
			u.user_rank 		AS userRank
		FROM `user` u
			LEFT JOIN (
			    SELECT dh.user_id, dh.team_id
			    FROM deployment_history dh
			    INNER JOIN (
			        SELECT user_id, MAX(create_date) AS latest_date
			        FROM deployment_history
			        GROUP BY user_id
			    ) latest
				    ON dh.user_id = latest.user_id
				    AND dh.create_date = latest.latest_date
				) dh ON u.user_id = dh.user_id
			LEFT JOIN team t
				ON t.team_id = dh.team_id
			LEFT JOIN department d
				ON d.department_id = t.department_id
		WHERE u.user_resign_date IS NULL					<!--  퇴사자 여부 확인 위해 -->
		ORDER BY 
			FIELD(u.user_rank, '국장', '부서장', '팀장', '과장', '대리', '사원')  ASC,
  			u.full_name ASC;
	</select>
	
	<!-- 조직도 -->
<select id="selectUserList" resultType="com.example.broadcastgroupware.dto.UserListDto">
  SELECT
    u.user_id   AS userId,
    u.username  AS username,
    CASE
      WHEN LEFT(u.user_sn2,1) IN ('1','3','5','7') THEN '남'
      WHEN LEFT(u.user_sn2,1) IN ('2','4','6','8') THEN '여'
      ELSE ''
    END         AS gender,
    u.full_name  AS fullName,
    u.user_rank  AS userRank,
    u.user_email AS email,
    u.user_join_date AS userJoinDate,
    t.team_id    AS teamId,
    t.team_name  AS teamName,
    COALESCE(ui.profile_image, '/resources/images/users/avatar-default.png') AS profileImage,
    d.department_id   AS departmentId,
    d.department_name AS departmentName
  FROM `user` u

  <!-- 1) 배치이력: 사용자별 최신 1행만 뽑는다 -->
  LEFT JOIN (
    SELECT user_id, team_id
    FROM (
      SELECT dh.*,
             ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY create_date DESC, deployment_history_id DESC) AS rn
      FROM deployment_history dh
    ) x
    WHERE x.rn = 1
  ) dh ON dh.user_id = u.user_id

  <!-- 2) 팀/부서 (각 team_id는 유일하다고 가정) -->
  LEFT JOIN team t        ON t.team_id = dh.team_id
  LEFT JOIN department d  ON d.department_id = t.department_id

  <!-- 3) 이미지: 사용자별 최신 1장만 -->
  LEFT JOIN (
    SELECT user_id, user_images_type AS profile_image
    FROM (
      SELECT ui.*,
             ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY create_date DESC, user_images_id DESC) AS rn
      FROM user_images ui
    ) z
    WHERE z.rn = 1
  ) ui ON ui.user_id = u.user_id

  <where>
    <!-- 퇴사자 제외 -->
    u.user_resign_date IS NULL
    <if test="q != null and q != ''">
     AND
    <choose>
      <!-- 이름만 -->
      <when test="field == 'name'">
        u.full_name LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 부서만 -->
      <when test="field == 'dept'">
        d.department_name LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 팀만 -->
      <when test="field == 'team'">
        t.team_name LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 직급만 -->
      <when test="field == 'rank'">
        u.user_rank LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 전체(기본): 이름/부서/팀/직급 -->
      <otherwise>
        (u.full_name       LIKE CONCAT('%', #{q}, '%')
         OR d.department_name LIKE CONCAT('%', #{q}, '%')
         OR t.team_name     LIKE CONCAT('%', #{q}, '%')
         OR u.user_rank     LIKE CONCAT('%', #{q}, '%'))
      </otherwise>
    </choose>
  </if>
  </where>

  ORDER BY
    CASE WHEN d.department_name = '대표' THEN 0 ELSE 1 END,
    d.department_name ASC,
    t.team_name ASC,
    FIELD(u.user_rank, '국장','부서장','팀장','과장','대리','주임','사원'),
    u.full_name ASC
  LIMIT #{limit} OFFSET #{offset}
</select>

  <!-- 관리자 목록 카운트: 목록과 동일한 FROM/WHERE 사용 -->
<select id="countUserList" resultType="int">
  SELECT COUNT(*)
  FROM (
    SELECT u.user_id
    FROM `user` u
    LEFT JOIN (
      SELECT user_id, team_id
      FROM (
        SELECT dh.*,
               ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY create_date DESC, deployment_history_id DESC) AS rn
        FROM deployment_history dh
      ) x
      WHERE x.rn = 1
    ) dh ON dh.user_id = u.user_id
    LEFT JOIN team t        ON t.team_id = dh.team_id
    LEFT JOIN department d  ON d.department_id = t.department_id
    LEFT JOIN (
      SELECT user_id, user_images_type AS profile_image
      FROM (
        SELECT ui.*,
               ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY create_date DESC, user_images_id DESC) AS rn
        FROM user_images ui
      ) z
      WHERE z.rn = 1
    ) ui ON ui.user_id = u.user_id
    <where>
       u.user_resign_date IS NULL 
    <if test="q != null and q != ''">
     AND
    <choose>
      <!-- 이름만 -->
      <when test="field == 'name'">
        u.full_name LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 부서만 -->
      <when test="field == 'dept'">
        d.department_name LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 팀만 -->
      <when test="field == 'team'">
        t.team_name LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 직급만 -->
      <when test="field == 'rank'">
        u.user_rank LIKE CONCAT('%', #{q}, '%')
      </when>
      <!-- 전체(기본): 이름/부서/팀/직급 -->
      <otherwise>
        (u.full_name       LIKE CONCAT('%', #{q}, '%')
         OR d.department_name LIKE CONCAT('%', #{q}, '%')
         OR t.team_name     LIKE CONCAT('%', #{q}, '%')
         OR u.user_rank     LIKE CONCAT('%', #{q}, '%'))
      </otherwise>
    </choose>
  </if>
    </where>
    GROUP BY u.user_id
  ) X
</select>
	

</mapper>