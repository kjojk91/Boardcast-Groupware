<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.broadcastgroupware.mapper.AttendanceMapper">
	<!--오늘날짜로 로그인한 직원의 근태기록 조회-->
	<select id="selectUserAttendance" resultType="com.example.broadcastgroupware.domain.Attendance">
		SELECT attendance_in attendanceIn, attendance_out attendanceOut, 
			attendance_outside attendanceOutside, attendance_inside attendanceInside
		FROM attendance WHERE attendance_date = DATE(NOW()) AND user_id = #{userId}
	</select>

	<!--로그인한 직원의 근태기록 조회-->
	<select id="selectAttendanceList" resultType="map">
		SELECT attendance_date attendanceDate, attendance_in attendanceIn, attendance_out attendanceOut, 
			attendance_outside attendanceOutside, attendance_inside attendanceInside
		FROM attendance WHERE user_id=#{userId}
	</select>
	
	<!--이번주 근무시간-->
	<select id="selectWeekWorkHours" resultType="string">
		SELECT sec_to_time(sum(timestampdiff(second,attendance_in,attendance_out)) OVER()) monthWorkHours 
		FROM attendance         
		WHERE year(attendance_date) = year(NOW()) and week(attendance_date) = week(NOW()) AND user_id = #{userId}
		ORDER BY attendance_date DESC LIMIT 0,1
	</select>
	
	<!--입사후 총 근무일-->
	<select id="selectTotalWorkDay" resultType="string">
		SELECT CONCAT(timestampdiff(year,user_join_date,NOW()),'년 ',
			timestampdiff(day,user_join_date,NOW())%365,'일') FROM user WHERE user_id=#{userId}
	</select>
	
	<!--직책별 팀,부서,전체 근태-->
	<select id="selectAttendanceListByRank" resultType="map" parameterType="com.example.broadcastgroupware.dto.AttendanceListDto">
		SELECT d.department_name departmentName, t.team_name teamName, u.full_name fullName, u.user_rank userRank,
			(SELECT date_format(sec_to_time(sum(timestampdiff(second,attendance_in,attendance_out)) OVER()),'%H시간 %i분') monthWorkHours FROM attendance         
			WHERE year(attendance_date) = #{year} and month(attendance_date) = #{month} AND user_id = u.user_id
			ORDER BY attendance_date DESC LIMIT 0,1) monthWorkHours,
			(SELECT COUNT(*) FROM attendance WHERE hour(attendance_in)>=9 AND user_id=u.user_id
			AND year(attendance_date) = #{year} and month(attendance_date) = #{month}) lateness
		FROM user u 
		INNER JOIN deployment_history dh ON u.user_id = dh.user_id
		INNER JOIN team t ON t.team_id = dh.team_id
		INNER JOIN department d ON d.department_id = t.department_id
		WHERE u.user_resign_date IS NULL 
			AND (dh.user_id,dh.create_date) IN (SELECT user_id, MAX(create_date) FROM deployment_history GROUP BY user_id)
		<choose>
			<when test="role == 'admin' or userRank == '국장'">
				
			</when>
			<when test="role != 'admin' and userRank == '팀장'">
				AND dh.team_id=
					(SELECT team_id FROM deployment_history WHERE user_id=#{userId} ORDER BY create_date desc LIMIT 0,1)
			</when>
			<when test="role != 'admin' and userRank == '부서장'">
				AND d.department_id=
					(SELECT d.department_id FROM department d 
					INNER JOIN team t ON d.department_id = t.department_id 
					INNER JOIN deployment_history dh ON dh.team_id = t.team_id
					WHERE dh.user_id=#{userId} ORDER BY dh.create_date desc LIMIT 0,1)
			</when>
		</choose>
	</select>
	
	<!--잔여 휴가-->
	<select id="selectRemainVacation">
		SELECT case when (vacation_annual_total-vacation_annual_use)%1 =0 then FLOOR((vacation_annual_total-vacation_annual_use))
			else (vacation_annual_total-vacation_annual_use) end vac
		FROM vacation WHERE user_id=#{userId}
	</select>
	
	<!--퇴근을 누르지 않고 퇴근한 직원목록-->
	<select id="selectNotOutUser">
		SELECT user_id userId FROM attendance 
		WHERE attendance_in is not null and attendance_out IS NULL AND attendance_date = date(NOW())
	</select>
	
	<!--출근기록-->
	<insert id="insertAttendanceIn" parameterType="com.example.broadcastgroupware.domain.Attendance">
		INSERT INTO attendance(user_id, attendance_in) VALUES(#{userId},now());
	</insert>
	
	<!--퇴근기록-->
	<update id="updateAttendanceOut" parameterType="com.example.broadcastgroupware.domain.Attendance">
		UPDATE attendance SET attendance_out=now() WHERE attendance_date = DATE(NOW()) AND user_id = #{userId}
	</update>
	
	<!--외근기록-->
	<update id="updateAttendanceOutside" parameterType="com.example.broadcastgroupware.domain.Attendance">
		UPDATE attendance SET attendance_outside=now() WHERE attendance_date = DATE(NOW()) AND user_id = #{userId}
	</update>
	
	<!--외근복귀기록-->
	<update id="updateAttendanceInside" parameterType="com.example.broadcastgroupware.domain.Attendance">
		UPDATE attendance SET attendance_inside=now() WHERE attendance_date = DATE(NOW()) AND user_id = #{userId}
	</update>
	
	<!--출근하고 퇴근 안 누른사람 정시퇴근 처리-->
	<update id="updateNotOutUser">
		UPDATE attendance SET attendance_out='18:00:00' WHERE user_id= #{userId} AND attendance_date=DATE(NOW())
	</update>
	
	<!-- home 페이지에서 최근 근태 출근,퇴근,외근 별 카운트(오늘 포함) -->
	<select id="selectCountsInDays" resultType="map">
		SELECT
			SUM(CASE WHEN attendance_in 	 IS NOT NULL THEN 1 ELSE 0 END) AS checkin,
			SUM(CASE WHEN attendance_out 	 IS NOT NULL THEN 1 ELSE 0 END) AS checkout,
			SUM(CASE WHEN attendance_outside IS NOT NULL THEN 1 ELSE 0 END) AS field
		FROM attendance
		WHERE user_id = #{userId}
		AND attendance_date BETWEEN DATE_SUB(CURDATE(), INTERVAL (#{days} - 1) DAY) AND CURDATE()	
	</select>
</mapper>