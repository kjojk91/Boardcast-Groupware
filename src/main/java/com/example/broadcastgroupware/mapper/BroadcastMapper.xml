<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper 
	namespace="com.example.broadcastgroupware.mapper.BroadcastMapper">
	
	<!-- 방송편성 공통 resultMap -->
    <resultMap id="BroadcastMap" type="com.example.broadcastgroupware.dto.BroadcastFormDto">
        <id     column="broadcast_schedule_id"   property="broadcastScheduleId"/>
        <result column="approval_document_id"    property="approvalDocumentId"/>

        <result column="broadcast_form_id"       property="broadcastFormId"/>
        <result column="broadcast_form_name"     property="broadcastFormName"/>
        <result column="broadcast_form_capacity" property="broadcastFormCapacity"/>
        <result column="start_date"              property="broadcastFormStartDate"/>
        <result column="end_date"                property="broadcastFormEndDate"/>
        <result column="start_time"              property="broadcastFormStartTime"/>
        <result column="end_time"                property="broadcastFormEndTime"/>

        <!-- 대표자 -->
        <result column="user_id"                 property="userId"/>
        <result column="full_name"               property="fullName"/>

        <!-- 요일 플래그 -->
        <result column="broadcast_monday"        property="broadcastMonday"/>
        <result column="broadcast_tuesday"       property="broadcastTuesday"/>
        <result column="broadcast_wednesday"     property="broadcastWednesday"/>
        <result column="broadcast_thursday"      property="broadcastThursday"/>
        <result column="broadcast_friday"        property="broadcastFriday"/>
        <result column="broadcast_saturday"      property="broadcastSaturday"/>
        <result column="broadcast_sunday"        property="broadcastSunday"/>

        <!-- 회차 수 -->
        <result column="episodes_count"          property="episodesCount"/>
    </resultMap>
    
    
    <!-- ======== 방송편성 ======== -->

    <!-- 방송편성 총 개수 -->
    <select id="countBroadcasts" resultType="int">
        SELECT COUNT(*)
        FROM broadcast_schedule bs
        JOIN approval_line al
        	ON al.approval_line_id = bs.approval_line_id
        JOIN approval_document ad
        	ON ad.approval_document_id = al.approval_document_id
        JOIN broadcast_form bf
        	ON bf.approval_document_id = ad.approval_document_id
        <where>
            <if test="keyword != null and keyword != ''">
                bf.broadcast_form_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <!-- 방송편성 목록 -->
    <select id="selectBroadcasts" resultMap="BroadcastMap">
        SELECT
            bs.broadcast_schedule_id,
            bf.broadcast_form_id, bf.broadcast_form_name,
            bf.broadcast_form_start_date AS start_date,
            bf.broadcast_form_end_date AS end_date,
            bw.broadcast_monday, bw.broadcast_tuesday, bw.broadcast_wednesday,
            bw.broadcast_thursday, bw.broadcast_friday, bw.broadcast_saturday, bw.broadcast_sunday
        FROM broadcast_schedule bs
        JOIN approval_line al 
        	ON al.approval_line_id = bs.approval_line_id
        JOIN approval_document ad 
        	ON ad.approval_document_id = al.approval_document_id
        JOIN broadcast_form bf
        	ON bf.approval_document_id = ad.approval_document_id
        LEFT JOIN broadcast_weekday bw
        	ON bw.broadcast_form_id = bf.broadcast_form_id
        <where>
            <if test="keyword != null and keyword != ''">
                bf.broadcast_form_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        ORDER BY bs.broadcast_schedule_id DESC
        LIMIT #{beginRow}, #{rowPerPage}
    </select>

    <!-- 방송편성 상세 -->
    <select id="selectBroadcastDetail" parameterType="int" resultMap="BroadcastMap">
        SELECT
            bs.broadcast_schedule_id, ad.approval_document_id,
            bf.broadcast_form_id, bf.broadcast_form_name, bf.broadcast_form_capacity,
            bf.broadcast_form_start_date AS start_date,
            bf.broadcast_form_end_date AS end_date,
            bf.broadcast_form_start_time AS start_time,
            bf.broadcast_form_end_time AS end_time,
            ad.user_id, u.full_name,
            bw.broadcast_monday, bw.broadcast_tuesday, bw.broadcast_wednesday,
            bw.broadcast_thursday, bw.broadcast_friday, bw.broadcast_saturday, bw.broadcast_sunday,
            (SELECT COUNT(*) FROM broadcast_episode be
            	WHERE be.broadcast_schedule_id = bs.broadcast_schedule_id) AS episodes_count
        FROM broadcast_schedule bs
        JOIN approval_line al 
        	ON al.approval_line_id = bs.approval_line_id
        JOIN approval_document ad 
        	ON ad.approval_document_id = al.approval_document_id
        JOIN broadcast_form bf 
        	ON bf.approval_document_id = ad.approval_document_id
        LEFT JOIN broadcast_weekday bw
        	ON bw.broadcast_form_id = bf.broadcast_form_id
        LEFT JOIN `user` u
        	ON u.user_id = ad.user_id
        WHERE bs.broadcast_schedule_id = #{scheduleId}
    </select>
    
    
	<!-- ======== 프로그램별 팀원 ======== -->
	
    <!-- 프로그램별 팀원 수 -->
    <select id="countBroadcastTeamBySchedule" resultType="int">
        SELECT COUNT(*)
        FROM broadcast_team bt
        WHERE bt.broadcast_schedule_id = #{scheduleId}
    </select>

   	<!-- 프로그램별 팀원 목록 -->
    <select id="selectBroadcastTeamBySchedule"
            resultType="com.example.broadcastgroupware.dto.BroadcastTeamRowDto">
        SELECT
            bt.broadcast_team_id    AS broadcastTeamId,
            u.user_id               AS userId,
            u.full_name             AS fullName,
            d.department_name       AS departmentName,
            t.team_name             AS teamName,
            u.user_rank             AS userRank
        FROM broadcast_team bt
        JOIN `user` u
            ON u.user_id = bt.user_id
        LEFT JOIN (
            SELECT dh.user_id, dh.team_id
            FROM deployment_history dh
            JOIN (
                SELECT user_id, MAX(create_date) AS max_cd
                FROM deployment_history
                GROUP BY user_id
            ) latest
              ON latest.user_id = dh.user_id
             AND latest.max_cd = dh.create_date
        ) cur ON cur.user_id = u.user_id
        LEFT JOIN team t
            ON t.team_id = cur.team_id
        LEFT JOIN department d
            ON d.department_id = t.department_id
        WHERE bt.broadcast_schedule_id = #{scheduleId}
        ORDER BY bt.broadcast_team_id ASC
        LIMIT #{beginRow}, #{rowPerPage}
    </select>
    
	<!-- 프로그램 팀원 중복 여부 -->
	<select id="existsBroadcastTeam" resultType="int">
	    SELECT COUNT(*)
	    FROM broadcast_team
	    WHERE broadcast_schedule_id = #{scheduleId}
	        AND user_id = #{userId}
	</select>
	
	<!-- 프로그램 팀 정원 -->
	<select id="selectCapacityBySchedule" resultType="int">
	    SELECT bf.broadcast_form_capacity
	    FROM broadcast_schedule bs
	    JOIN approval_line al 
	    	ON al.approval_line_id = bs.approval_line_id
	    JOIN approval_document ad 
	    	ON ad.approval_document_id = al.approval_document_id
	    JOIN broadcast_form bf 
	    	ON bf.approval_document_id = ad.approval_document_id
	    WHERE bs.broadcast_schedule_id = #{scheduleId}
	</select>
	
	
	<!-- 프로그램 팀원 등록 -->
	<insert id="insertBroadcastTeam" parameterType="com.example.broadcastgroupware.domain.BroadcastTeam">
	    INSERT INTO broadcast_team (broadcast_schedule_id, user_id, create_date)
	    VALUES (#{broadcastScheduleId}, #{userId}, NOW())
	</insert>
	
	<!-- 프로그램 팀원 삭제 -->
	<delete id="deleteBroadcastTeamByIds">
	    DELETE FROM broadcast_team
	    WHERE broadcast_team_id IN
	    <foreach collection="ids" item="id" open="(" separator="," close=")">
	        #{id}
	    </foreach>
	</delete>
	
	
	<!-- ======== 회차 ======== -->
    
    <!-- 방송 편성 INSERT -->
    <!-- 
		useGeneratedKeys="true": DB에서 AUTO_INCREMENT로 생성된 PK 값을 가져오도록 설정
		keyProperty="broadcastScheduleId": 생성된 PK를 BroadcastSchedule 객체의 broadcastScheduleId 필드에 자동 세팅
		=> insert 실행 후 schedule.getBroadcastScheduleId() 호출 시 DB에서 생성된 PK 값 확인 가능
	-->
	<insert id="insertBroadcastSchedule"
	        parameterType="com.example.broadcastgroupware.domain.BroadcastSchedule"
	        useGeneratedKeys="true" keyProperty="broadcastScheduleId">
	    INSERT INTO broadcast_schedule (approval_line_id, create_date)
	    VALUES (#{approvalLineId}, NOW())
	</insert>
	
	<!-- 동일 결재 라인으로 이미 생성된 편성 재사용 -->
	<select id="findScheduleIdByApprovalLineId" parameterType="int" resultType="int">
	    SELECT bs.broadcast_schedule_id
	    FROM broadcast_schedule bs
	    WHERE bs.approval_line_id = #{approvalLineId}
	    LIMIT 1
	</select>
	
	<!-- 해당 편성의 회차 수 -->
	<select id="countEpisodesByScheduleId" parameterType="int" resultType="int">
	    SELECT COUNT(*)
	    FROM broadcast_episode
	    WHERE broadcast_schedule_id = #{broadcastScheduleId}
	</select>
	
	<!-- 회차 일괄 INSERT (코멘트 제외) -->
	<insert id="insertEpisodes">
	    INSERT INTO broadcast_episode (
	    	broadcast_schedule_id, broadcast_episode_no,
	        broadcast_episode_date, broadcast_episode_weekday,
	        create_date
	    ) 
	    VALUES
	    <foreach collection="list" item="e" separator=",">
	        (#{e.broadcastScheduleId}, #{e.broadcastEpisodeNo},
	         #{e.broadcastEpisodeDate}, #{e.broadcastEpisodeWeekday},
	         NOW())
	    </foreach>
	</insert>
	
	
	<!-- ======== 기타 ======== -->	
	
	<!-- 홈카드: 방송목록 Top N (최신 편성 순) -->
	<select id="selectHomeTopBroadcasts" parameterType="map" resultMap="BroadcastMap">
		  SELECT
		    bs.broadcast_schedule_id                                      AS broadcast_schedule_id,
		    ad.approval_document_id                                       AS approval_document_id,
		
		    bf.broadcast_form_id                                          AS broadcast_form_id,
		    bf.broadcast_form_name                                        AS broadcast_form_name,
		    bf.broadcast_form_capacity                                    AS broadcast_form_capacity,
		
		    bf.broadcast_form_start_date                                  AS start_date,
		    bf.broadcast_form_end_date                                    AS end_date,
		
		    <!-- 시간은 HH:mm로 내려도 되고(문자열), 원본 TIME으로 내려도 됨
		       BroadcastMap은 start_time/end_time 컬럼명을 매핑하고 있어 그대로 사용 -->
		    TIME_FORMAT(bf.broadcast_form_start_time, '%H:%i')            AS start_time,
		    TIME_FORMAT(bf.broadcast_form_end_time,   '%H:%i')            AS end_time,
		
		    ad.user_id                                                    AS user_id,
		    u.full_name                                                   AS full_name,
		
		    bw.broadcast_monday, bw.broadcast_tuesday, bw.broadcast_wednesday,
		    bw.broadcast_thursday, bw.broadcast_friday, bw.broadcast_saturday, bw.broadcast_sunday,
		
		    <!-- 회차 수는 여기선 불필요하면 제외 가능. 필요하면 유지 -->
		    (SELECT COUNT(*) FROM broadcast_episode be
		      WHERE be.broadcast_schedule_id = bs.broadcast_schedule_id)  AS episodes_count
		
		  FROM broadcast_schedule bs
		  JOIN approval_line al  ON al.approval_line_id = bs.approval_line_id
		  JOIN approval_document ad ON ad.approval_document_id = al.approval_document_id
		  JOIN broadcast_form bf ON bf.approval_document_id = ad.approval_document_id
		  LEFT JOIN broadcast_weekday bw ON bw.broadcast_form_id = bf.broadcast_form_id
		  LEFT JOIN `user` u ON u.user_id = ad.user_id
		
		  <!-- 필터가 필요하면 여기 if문 추가 (예: 진행중인 편성만 등) -->
		
		  ORDER BY bs.broadcast_schedule_id DESC
		  LIMIT #{limit}
	</select>
	
</mapper>