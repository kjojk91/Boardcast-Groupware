<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.broadcastgroupware.mapper.ReservationMapper">
	
	<select id="getTotalCountByDate" resultType="int">
	    SELECT COUNT(DISTINCT v.vehicle_id)
	    FROM vehicle v
	    LEFT JOIN vehicle_reservation r
	        ON v.vehicle_id = r.vehicle_id
	        AND DATE(r.vehicle_reservation_start_time) = #{today}
	</select>

	<!-- 예약리스트 -->
	<select id="getCarReservationListByDate" parameterType="map" resultType="com.example.broadcastgroupware.dto.CarReservationDto">
	    SELECT
		    v.vehicle_id AS vehicleId,
		    v.vehicle_status AS vehicleStatus,
		    v.vehicle_no AS vehicleNo,
		    v.vehicle_type AS vehicleType,
		    v.vehicle_name AS vehicleName,
		    DATE_FORMAT(r.vehicle_reservation_start_time, '%Y-%m-%d %H:%i') AS reservationStart,
		    DATE_FORMAT(r.vehicle_reservation_end_time, '%Y-%m-%d %H:%i') AS reservationEnd
		FROM
		    (SELECT *
		     FROM vehicle
		     ORDER BY vehicle_id
		     LIMIT #{beginRow}, #{rowPerPage}) v
		LEFT JOIN vehicle_reservation r
		    ON v.vehicle_id = r.vehicle_id
		    AND r.vehicle_reservation_start_time >= #{todayStart}
		ORDER BY v.vehicle_id, r.vehicle_reservation_start_time
	</select>
	
	<!-- 차량등록 -->
	<insert id="addCar" parameterType="com.example.broadcastgroupware.domain.Vehicle">
		INSERT INTO vehicle(vehicle_status, vehicle_no, vehicle_type, vehicle_name)
		VALUES('Y', #{vehicleNo}, #{vehicleType}, #{vehicleName})
	</insert>
	
	<!-- 관리자용 차량리스트 -->
	<select id="adminCarList" resultType="com.example.broadcastgroupware.domain.Vehicle">
		SELECT vehicle_id AS vehicleId, vehicle_status AS vehicleStatus, vehicle_no AS vehicleNo,
		vehicle_type AS vehicleType, vehicle_name AS vehicleName
		FROM vehicle
	</select>
	
	<!-- 차량 정보 수정 -->
	<update id="modifyCar">
		UPDATE vehicle SET vehicle_no = #{vehicleNo}, vehicle_type = #{vehicleType}, vehicle_name = #{vehicleName}
		WHERE vehicle_id = #{vehicleId}
	</update>
	
	<!-- 이슈등록시 상태값 변경 -->
	<update id="modifyVehicleStatus">
		UPDATE vehicle SET vehicle_status = #{vehicleStatus}
		WHERE vehicle_id = #{vehicleId}
	</update>
	
	<!-- 이슈등록 -->
	<insert id="insertVehicleReason">
		INSERT INTO vehicle_use_reason(vehicle_id, vehicel_use_reason_content
								, vehicle_use_reason_start_date, vehicle_use_reason_end_date)
		VALUES(#{vehicleId}, #{vehicleUseReasonContent}, #{vehicleUseReasonStartDate}, #{vehicleUseReasonEndDate})
	</insert>
	
	<!-- 기존 예약이랑 겹치는지 확인 -->
	<select id="checkReservations" parameterType="com.example.broadcastgroupware.domain.VehicleReservation" resultType="int">
	    SELECT COUNT(*)
		FROM vehicle_reservation
		WHERE vehicle_id = #{vehicleId}
			AND vehicle_reservation_start_time &lt; STR_TO_DATE(#{vehicleReservationEndTime}, '%Y-%m-%d %H:%i:%s')
			AND vehicle_reservation_end_time &gt; STR_TO_DATE(#{vehicleReservationStartTime}, '%Y-%m-%d %H:%i:%s')
	</select>
	
	<!-- 차량 예약 -->
	<insert id="carReservation" parameterType="com.example.broadcastgroupware.domain.VehicleReservation">
	    INSERT INTO vehicle_reservation(
	        user_id, vehicle_id, vehicle_reservation_start_time, vehicle_reservation_end_time
	    )
	    VALUES(
	        #{userId},
	        #{vehicleId},
	        STR_TO_DATE(#{vehicleReservationStartTime}, '%Y-%m-%d %H:%i:%s'),
	        STR_TO_DATE(#{vehicleReservationEndTime}, '%Y-%m-%d %H:%i:%s')
	    )
	</insert>
	
	<!-- 본인차량 예약조회 -->
	<select id="myReservationList">
		SELECT
		    r.vehicle_reservation_id AS vehicleReservationId,
		    v.vehicle_id AS vehicleId,
		    v.vehicle_no AS vehicleNo,
		    DATE_FORMAT(r.vehicle_reservation_start_time, '%Y-%m-%d %H:%i') AS rentDate,
		    DATE_FORMAT(r.vehicle_reservation_end_time, '%Y-%m-%d %H:%i') AS returnDate
		FROM
		    (SELECT *
		     FROM vehicle
		     ORDER BY vehicle_id
		     ) v
		LEFT JOIN vehicle_reservation r
		    ON v.vehicle_id = r.vehicle_id
		INNER JOIN user u
			ON r.user_id = u.user_id
		WHERE u.user_id = #{userId}
		AND r.vehicle_reservation_start_time &gt; NOW() - INTERVAL 2 DAY
		ORDER BY v.vehicle_id, r.vehicle_reservation_start_time
	</select>
	
	<!-- 차량 예약 취소 -->
	<delete id="cancelReservation" parameterType="int">
		DELETE FROM vehicle_reservation 
		WHERE vehicle_reservation_id = #{vehicleReservationId}
	</delete>
	
	<!-- 비활성화 차량중 오늘 날짜 기준 이슈날짜 종료 차량 조회 -->
	<select id="StatusNList" resultType="int">
		SELECT v.vehicle_id AS vehicleId
		FROM vehicle v
		INNER JOIN vehicle_use_reason vr
		ON v.vehicle_id = vr.vehicle_id
		WHERE v.vehicle_status = 'N' AND vr.vehicle_use_reason_end_date &lt; NOW()
	</select>
	
	<!-- 이슈 종료 차량 상태값 변경 -->
	<update id="modifyCarStatus" parameterType="list">
	    UPDATE vehicle
	    SET vehicle_status = 'Y'
	    WHERE vehicle_id IN
	    <foreach item="id" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
	</update>

	
	
	
	<!-- === 회의실 === -->
	<!-- 관리자-회의실등록 -->
	<insert id="addMeetingRoom" parameterType="com.example.broadcastgroupware.domain.Room">
		INSERT INTO room(room_type, room_name, room_location, room_capacity, room_status)
		VALUES('회의실',#{roomName}, #{roomLocation}, #{roomCapacity}, 'Y')
	</insert>
	
	<!-- 관리자용 회의실 리스트 -->
	<select id="meetingroomAdminList">
		SELECT room_id AS roomId, room_name AS roomName, room_location AS roomLocation, room_capacity AS roomCapacity, room_status AS roomStatus
		FROM room
		WHERE room_type = '회의실'
	</select>
	
	<!-- 관리자-회의실 이슈등록 -->
	<update id="modifyRoomStatus">
		UPDATE room set room_status = #{roomStatus}
		WHERE room_id = #{roomId}
	</update>
	<insert id="adminMeetingroomReservation">
		INSERT INTO room_reservation(user_id, room_id, room_reservation_reason, room_reservation_start_time, room_reservation_end_time)
		VALUES(#{userId}, #{addIssueToRoom.roomId}, #{addIssueToRoom.roomUseReasonContent}, #{addIssueToRoom.roomUseReasonStartDate}, #{addIssueToRoom.roomUseReasonEndDate})
	</insert>
	<insert id="meetingroomIssue">
		INSERT INTO room_use_reason(room_id, room_use_reason_content, room_use_reason_start_date, room_use_reason_end_date)
		VALUES(#{addIssueToRoom.roomId}, #{addIssueToRoom.roomUseReasonContent}, #{addIssueToRoom.roomUseReasonStartDate}, #{addIssueToRoom.roomUseReasonEndDate})
	</insert>

	<!-- 회의실 리스트 -->
	<select id="meetingroomList" parameterType="com.example.broadcastgroupware.domain.Room">
		SELECT room_id AS roomId, room_name AS roomName, room_location AS roomLocation 
		FROM room
		WHERE room_status = 'Y'
		ORDER BY room_id
	</select>
	
	<!-- 회의실별 예약 조회 -->
	<select id="meetingroomReservations">
		SELECT rr.room_id AS roomId, rr.room_reservation_reason AS roomReservationReason,
				rr.room_reservation_start_time AS roomReservationStartTime, rr.room_reservation_end_time AS roomReservationEndTime,
				r.room_name AS roomName, r.room_location AS roomLocation, rr.room_reservation_id AS roomReservationId
		FROM room r
		INNER JOIN room_reservation rr
		ON r.room_id = rr.room_id
		WHERE r.room_id = #{roomId}
	</select>
	
	<!-- 예약 중복 체크 -->
	<select id="checkReservationsRoom" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM room_reservation
	    WHERE room_id = #{reservation.roomId}
			AND room_reservation_start_time &lt; STR_TO_DATE(#{reservation.roomReservationStartTime}, '%Y-%m-%d %H:%i:%s')
			AND room_reservation_end_time &gt; STR_TO_DATE(#{reservation.roomReservationEndTime}, '%Y-%m-%d %H:%i:%s')
	</select>
	<!-- 회의실 예약 -->
	<insert id="meetingroomReservation">
	    INSERT INTO room_reservation(room_id, user_id, room_reservation_reason, room_reservation_start_time, room_reservation_end_time)
	    VALUES
	    <foreach collection="reservations" item="r" separator=",">
	        (#{r.roomId}, #{userId}, #{r.roomReservationReason}, #{r.roomReservationStartTime}, #{r.roomReservationEndTime})
	    </foreach>
	</insert>

	<!-- 예약내역 상세보기 -->
	<select id="roomDetail" resultType="com.example.broadcastgroupware.dto.RoomDetailDto">
		SELECT rr.room_reservation_start_time AS roomReservationStartTime, rr.room_reservation_end_time AS roomReservationEndTime,
				rr.room_reservation_reason AS roomReservationReason, u.full_name AS userName, u.user_rank AS userRank
		FROM room_reservation rr
		INNER JOIN user u
		ON rr.user_id = u.user_id
		WHERE room_reservation_id = #{reservationId}
	</select>
	
	<!-- 예약 취소 -->
	<delete id="roomCancel" parameterType="int">
		DELETE FROM room_reservation WHERE room_reservation_id = #{roomCancel}
	</delete>
	
	<select id="myReservation" resultType="com.example.broadcastgroupware.dto.MyReservationRoom">
		SELECT rr.room_reservation_id AS roomReservationId, r.room_name AS roomName, r.room_location AS roomLocation, 
				rr.room_reservation_start_time AS roomReservationStartTime,
				rr.room_reservation_end_time AS roomReservationEndTime, rr.room_reservation_reason AS roomReservationReason
		FROM room r
		INNER JOIN room_reservation rr
		ON r.room_id = rr.room_id
		INNER JOIN user u
		ON rr.user_id = u.user_id
		WHERE u.user_id = #{userId} AND rr.room_reservation_start_time &gt; NOW()
	</select>
</mapper>